import Head from "next/head";
import {IStation} from "@/types/types";
import {GetStaticPaths, GetStaticProps, GetStaticPropsContext} from "next";
import Link from "next/link";

export default function Single({station}: { station: IStation }) {
    return (
        <>
            <Head>
                <title>{station.name}</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="container mx-auto py-12 space-y-4">
                <Link href={`/journeys/`} className="flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="w-5 h-5">
                        <path fillRule="evenodd"
                            d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z"
                            clipRule="evenodd"/>
                    </svg>

                    <div className="ml-1">Journey list</div>
                </Link>

                <h1 className="text-2xl">
                    {station.name}
                </h1>

                <div key={station.id} className="w-1/2 border border-cyan-200 rounded-md shadow-xs">
                    <div className="flex flex-wrap">
                        <div className="w-1/2 p-4">
                            <div className="text-xs text-slate-700 uppercase tracking-wider">Address</div>
                            <div>{station.address}</div>
                        </div>
                        <div className="w-1/2 p-4">
                            <div className="text-xs text-slate-700 uppercase tracking-wider">City</div>
                            <div>{station.city}</div>
                        </div>
                        <div className="w-1/2 p-4">
                            <div className="text-xs text-slate-700 uppercase tracking-wider">Operator</div>
                            <div>{station.operator}</div>
                        </div>
                        <div className="w-1/2 p-4">
                            <div className="text-xs text-slate-700 uppercase tracking-wider">Capacity</div>
                            <div>{station.capacity}</div>
                        </div>
                    </div>
                </div>
            </main>
        </>
    );
}

export const getStaticPaths: GetStaticPaths = async () => {
    const res = await fetch(process.env.BACKEND_URL + "/stations");
    const list = await res.json();

    const paths = list.map((station: IStation) => ({
        params: {
            id: station.identifier.toString(),
        },
    }));

    return {
        paths,
        fallback: false,
    };
}

export const getStaticProps: GetStaticProps = async (context: GetStaticPropsContext) => {
    const res = await fetch(process.env.BACKEND_URL + "/stations/" + context.params?.id);
    const station = await res.json();

    return {
        props: {station},
    };
}
